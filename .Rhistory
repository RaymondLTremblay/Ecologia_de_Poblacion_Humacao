0,	    0.047,	   0.657,  0,    0,
0	,     0,	       0.019,	0.682, 0,
0,      0,         0,     0.061, 0.8091
), byrow=5, ncol=5)
matFCc=matrix(c(
0,	0,	0,	4.665, 61,896,
0,	0,	0,	0,0,
0,	0,	0,	0,0,
0,	0,	0,	0,0,
0,0,0,0,0
), byrow=5, ncol=5)
matACc=matUCc+matFCc
matUCc
matFCc
matFCc=matrix(c(
0,	0,	0,	4.665, 61.896,
0,	0,	0,	0,0,
0,	0,	0,	0,0,
0,	0,	0,	0,0,
0,0,0,0,0
), byrow=5, ncol=5)
matACc=matUCc+matFCc
matACc
truelambda(matACc)
elas(matACc)
pr1 <- project(matACc, vector=n0, time=24)
matACc
pr1 <- project(matACc, vector=n0, time=24)
nCc <- c(10, 10, 10, 10, 10)
pr1 <- project(matACc, vector=n0, time=24)
nCc <- c(10, 10, 10, 10, 10)
pr1 <- project(matACc, vector=nCc, time=24)
#Plot the projection. This uses an S3 plotting
#method for projections. For info, see '?plot.projection'.
plot(pr1)
truelambda(matACc)
elas(matACc)
library(Rage)
library(Rage)
matU=matrix(c(
0.43, 	0,	    0.00,   0.00,
0.38,	  0.84,   0.00,	  0.00,
0, 	    0.00,	  0.51,	  0.15,
0,      0.14,   0.43,   0.84),
byrow=4, ncol=4)
matU
TF=matU+matF
matF=matrix(c(
0, 	  0,	  0,    0.14,
0,	  0, 	  0,	  0,
0, 	  0,	  0,	  0,
0,    0,    0,    0
), byrow=4, ncol=4)
matF
TF=matU+matF
TF
colnames(TF) <- c("plantulas", "juveniles", "adulto no reproductivos", "adultos reproductivos")
rownames(TF) <- colnames(TF)
TF
TF
#stages <- c(TF_TF)
plot_life_cycle(TF)
TF
#stages <- c(TF_TF)
plot_life_cycle(TF)
TF
library(popbio)
lambda(TF)
TF
matU=matrix(c(
0.43, 	0,	    0.00,   0.00,
0.38,	  0.84,   0.00,	  0.00,
0, 	    0.00,	  0.51,	  0.15,
0,      0.14,   0.43,   0.84),
byrow=4, ncol=4)
matU
matF=matrix(c(
0, 	  0,	  0,    0.0,
0,	  0, 	  0,	  0,
0, 	  0,	  0,	  0,
0,    0,    0,    0
), byrow=4, ncol=4)
matF
TF=matU+matF
TF
TF
colnames(TF) <- c("plantulas", "juveniles", "adulto no reproductivos", "adultos reproductivos")
rownames(TF) <- colnames(TF)
TF
orchid_names= c("1_plantulas", "2_juveniles", "3_adulto no reproductivos", "4_adultos reproductivos")
orchid_names_2= c("1", "2", "3", "4")
#stages <- c(TF_TF)
plot_life_cycle(TF)
#plot_life_cycle(TF, stages = orchid_names_2)
```
orchid_names_2= c("1", "2", "3", "4")
#stages <- c(TF_TF)
plot_life_cycle(TF)
#plot_life_cycle(TF, stages = orchid_names_2)
```
TF
lambda(TF) # crecimiento de 3%
matU1=matrix(c(
0.43, 	0,	  0,    0.00,
0.38,	0.84, 	0,	  0,
0, 	    0,	  0.51,	0.15,
0,      0.14, 0.43, 0.44
), byrow=4, ncol=4)
matU1
matF1=matrix(c(
0, 	  0,	  0,    0.14,
0,	  0, 	  0,	  0,
0, 	  0,	  0,	  0,
0,    0,    0,    0
), byrow=4, ncol=4)
matF1
TF1=matU1+matF1
TF1
lambda(TF1)
matU2=matrix(c(
0.43, 	0,	  0,    0.00,
0.38,	0.84, 	0,	  0,
0, 	    0,	  0.51,	0.15,
0,      0.14, 0.43, 0.84
), byrow=4, ncol=4)
matU2
matF2=matrix(c(
0, 	  0,	  0,    3.6,
0,	  0, 	  0,	  0,
0, 	  0,	  0,	  0,
0,    0,    0,    0
), byrow=4, ncol=4)
matF2
TF2=matU2+matF2
lambda(TF2)
library(popdemo)
isErgodic(TF, digits=10, return.eigvec=FALSE)
isIrreducible(TF)
plot_life_cycle(TF)
isIrreducible(TF)
isErgodic(TF, digits=10, return.eigvec=FALSE)
isIrreducible(TF)
matU=matrix(c(
0.43, 	0,	    0.00,   0.00,
0.38,	  0.84,   0.00,	  0.00,
0, 	    0.00,	  0.51,	  0.15,
0,      0.14,   0.43,   0.84),
byrow=4, ncol=4)
matU
matF=matrix(c(
0, 	  0,	  0,    0.14,
0,	  0, 	  0,	  0,
0, 	  0,	  0,	  0,
0,    0,    0,    0
), byrow=4, ncol=4)
matF
TF=matU+matF
TF
library(popdemo)
isErgodic(TF, digits=10, return.eigvec=FALSE)
isIrreducible(TF)
plot_life_cycle(TF)
matU4=matrix(c(
0.43, 	0,	    0,     0.00,
0.38,	  0.84, 	0,	   0,
0.00,   0,	    0.51,	 0.15,
0,      0.0,    0.43,  0.84
), byrow=4, ncol=4)
matU4  # ¿Cual es el problema con esa matriz?
matF4=matrix(c(
0, 	  0,	  0,    0.28,
0,	  0, 	  0,	  0,
0, 	  0,	  0,	  0,
0,    0,    0,    0
), byrow=4, ncol=4)
matF4
TF4=matU4+matF4
plot_life_cycle(TF4)
isErgodic(TF4)
isIrreducible(TF4)
isErgodic(TF4)
isIrreducible(TF4)
pr1 <- project(TF, vector=n0, time=24)
n0 <- c(10, 10, 10, 10)
pr1 <- project(TF, vector=n0, time=24)
#Plot the projection. This uses an S3 plotting
#method for projections. For info, see '?plot.projection'.
plot(pr1)
pr1 <- project(TF, vector=n0, time=100)
#Plot the projection. This uses an S3 plotting
#method for projections. For info, see '?plot.projection'.
plot(pr1)
remotes::install_github("jonesor/Rage")
library(popdemo)
library(popbio)
#remotes::install_github("jonesor/Rage")
R3T=matrix(c(
0.43, 	0,	    0,    0.0,
0.38,	  0.84, 	0,	  0,
0, 	    0,	    0.51,	0.15,
0,      0.14,   0.43, 0.84
), byrow=TRUE, ncol=4)
R3F=matrix(c(
0, 	0,	0, 0.14,
0,	0, 	0,0,
0,0,0,0,
0,0,0,0
), byrow=TRUE, ncol=4)
TF_TF=R3T+R3F
TF_TF
TF=TF_TF
library(Rage)
colnames(TF_TF) <- c("plantulas", "juveniles", "adulto no reproductivos", "adultos reproductivos")
rownames(TF_TF) <- colnames(TF_TF)
#stages <- c(TF_TF)
plot_life_cycle(TF_TF)
remotes::install_github("jonesor/Rage")
remove.packages("Rage")
remotes::install_github("jonesor/Rage")
library(popdemo)
library(popbio)
remotes::install_github("jonesor/Rage")
remove.packages("Rage")
library(popdemo)
library(popbio)
remotes::install_github("jonesor/Rage")
R3T=matrix(c(
0.43, 	0,	    0,    0.0,
0.38,	  0.84, 	0,	  0,
0, 	    0,	    0.51,	0.15,
0,      0.14,   0.43, 0.84
), byrow=TRUE, ncol=4)
R3F=matrix(c(
0, 	0,	0, 0.14,
0,	0, 	0,0,
0,0,0,0,
0,0,0,0
), byrow=TRUE, ncol=4)
TF_TF=R3T+R3F
TF_TF
TF=TF_TF
library(Rage)
colnames(TF_TF) <- c("plantulas", "juveniles", "adulto no reproductivos", "adultos reproductivos")
rownames(TF_TF) <- colnames(TF_TF)
#stages <- c(TF_TF)
plot_life_cycle(TF_TF)
R3T=matrix(c(
0.43, 	0,	    0,    0.0,
0.38,	  0.84, 	0,	  0,
0, 	    0,	    0.51,	0.15,
0,      0.14,   0.43, 0.84
), byrow=TRUE, ncol=4)
R3F=matrix(c(
0, 	0,	0, 0.14,
0,	0, 	0,0,
0,0,0,0,
0,0,0,0
), byrow=TRUE, ncol=4)
TF_TF=R3T+R3F
TF_TF
TF=TF_TF
#stages <- c(TF_TF)
plot_life_cycle(TF_TF)
library(Rage)
#stages <- c(TF_TF)
plot_life_cycle(TF_TF, node_order = c(1,2,3,4))
library(Rage)
matU=matrix(c(
0.43, 	0,	    0.00,   0.00,
0.38,	  0.84,   0.00,	  0.00,
0, 	    0.00,	  0.51,	  0.15,
0,      0.14,   0.43,   0.84),
byrow=4, ncol=4)
matU
matF=matrix(c(
0, 	  0,	  0,    0.14,
0,	  0, 	  0,	  0,
0, 	  0,	  0,	  0,
0,    0,    0,    0
), byrow=4, ncol=4)
matF
TF=matU+matF
TF
colnames(TF) <- c("plantulas", "juveniles", "adulto no reproductivos", "adultos reproductivos")
rownames(TF) <- colnames(TF)
TF
orchid_names= c("1_plantulas", "2_juveniles", "3_adulto no reproductivos", "4_adultos reproductivos")
orchid_names_2= c("1", "2", "3", "4")
#stages <- c(TF_TF)
plot_life_cycle(TF)
#plot_life_cycle(TF, stages = orchid_names_2)
library(Rage)
colnames(TF_TF) <- c("plantulas", "juveniles", "adulto no reproductivos", "adultos reproductivos")
rownames(TF_TF) <- colnames(TF_TF)
#stages <- c(TF_TF)
plot_life_cycle(TF_TF, node_order = c(1,2,3,4))
library(Rage)
matU2=matrix(c(
0.43, 	0,	  0,    0.00,
0.38,	0.84, 	0,	  0,
0, 	    0,	  0.51,	0.15,
0,      0.14, 0.43, 0.84
), byrow=4, ncol=4)
matU2
matF2=matrix(c(
0, 	  0,	  0,    3.6,
0,	  0, 	  0,	  0,
0, 	  0,	  0,	  0,
0,    0,    0,    0
), byrow=4, ncol=4)
matF2
TF2=matU2+matF2
lambda(TF2)
x=c(3,4,8,3,3,5,2,7,2,4,2,2,3,3,3)
sum(x)
mean(x)
library(popdemo)
isErgodic(TF, digits=10, return.eigvec=FALSE)
isIrreducible(TF)
plot_life_cycle(TF)
library(Rage)
matU4=matrix(c(
0.43, 	0,	    0,     0.00,
0.38,	  0.84, 	0,	   0,
0.00,   0,	    0.51,	 0.15,
0,      0.0,    0.43,  0.84
), byrow=4, ncol=4)
matU4  # ¿Cual es el problema con esa matriz?
matF4=matrix(c(
0, 	  0,	  0,    0.28,
0,	  0, 	  0,	  0,
0, 	  0,	  0,	  0,
0,    0,    0,    0
), byrow=4, ncol=4)
matF4
TF4=matU4+matF4
isErgodic(TF4)
isIrreducible(TF4)
plot_life_cycle(TF4)
library(Rage)
matU4=matrix(c(
0.43, 	0,	  0,    0.00,
0.38,	0.84, 	0,	  0,
0, 	    0,	  0.51,	0.15,
0,      0.0, 0.43, 0.84
), byrow=4, ncol=4)
matU4  # ¿Cual es el problema con esa matriz?
matF4=matrix(c(
0, 	  0,	  0,    0.28,
0,	  0, 	  0,	  0,
0, 	  0,	  0,	  0,
0,    0,    0,    0
), byrow=4, ncol=4)
matF4
TF4=matU4+matF4
isIrreducible(TF4)
plot_life_cycle(TF4)
plot_life_cycle(matACc)
matUCc=matrix(c(
0,	    0,   	     0,	    0,     0,
0.675,	0.703,     0,	    0,     0,
0,	    0.047,	   0.657,  0,    0,
0	,     0,	       0.019,	0.682, 0,
0,      0,         0,     0.061, 0.8091
), byrow=5, ncol=5)
matFCc=matrix(c(
0,	0,	0,	4.665, 61.896,
0,	0,	0,	0,0,
0,	0,	0,	0,0,
0,	0,	0,	0,0,
0,0,0,0,0
), byrow=5, ncol=5)
matACc=matUCc+matFCc
matACc
plot_life_cycle(matACc)
colnames(matACc) <- c("Huevos", "small_juv(1-7yrs)", "Large_juv(8-15)", "Subadults(16-21)", "Adults(22+)")
rownames(matACc) <- colnames(matACc)
colnames(matACc) <- c("Huevos", "small_juv(1-7yrs)", "Large_juv(8-15)", "Subadults(16-21)", "Adults(22+)")
rownames(matACc) <- colnames(matACc)
stages_turtle <- c("Huevos", "small_juv(1-7yrs)", "Large_juv(8-15)", "Subadults(16-21)", "Adults(22+)")
plot_life_cycle(matACc)
matUCc=matrix(c(
0,	    0,   	     0,	    0,     0,
0.675,	0.703,     0,	    0,     0,
0,	    0.047,	   0.657,  0,    0,
0	,     0,	       0.019,	0.682, 0,
0,      0,         0,     0.061, 0.8091
), byrow=5, ncol=5)
matFCc=matrix(c(
0,	0,	0,	4.665, 61.896,
0,	0,	0,	0,0,
0,	0,	0,	0,0,
0,	0,	0,	0,0,
0,0,0,0,0
), byrow=5, ncol=5)
matACc=matUCc+matFCc
matACc
plot_life_cycle(matACc)
colnames(matACc) <- c("Huevos", "small_juv(1-7yrs)", "Large_juv(8-15)", "Subadults(16-21)", "Adults(22+)")
rownames(matACc) <- colnames(matACc)
plot_life_cycle(matACc)
matUCc=matrix(c(
0,	    0,   	     0,	    0,     0,
0.675,	0.703,     0,	    0,     0,
0,	    0.047,	   0.657,  0,    0,
0	,     0,	       0.019,	0.682, 0,
0,      0,         0,     0.061, 0.8091
), byrow=5, ncol=5)
matFCc=matrix(c(
0,	0,	0,	4.665, 61.896,
0,	0,	0,	0,0,
0,	0,	0,	0,0,
0,	0,	0,	0,0,
0,0,0,0,0
), byrow=5, ncol=5)
matACc=matUCc+matFCc
matACc
plot_life_cycle(matACc)
colnames(matACc) <- c("Huevos", "small_juv(1-7yrs)", "Large_juv(8-15)", "Subadults(16-21)", "Adults(22+)")
rownames(matACc) <- colnames(matACc)
plot_life_cycle(matACc)
truelambda(matACc)
nCc
matACc
round(elas(matACc),digit=4) # elasticities
stable.stage(matACc)
n=c(1000,0,0,0, 0)
convt(matACc, accuracy=1e-3, vector=n) # Convergence time to Stable Stage Distribution
n1=c(23,64,10,7, 3)
convt(matACc, accuracy=1e-3, vector=n1) # Convergence time to Stable Stage Distribution
n=c(1000,0,0,0, 0)
convt(matACc, accuracy=1e-3, vector=n)
n1=c(23,64,10,7, 3)
convt(matACc, accuracy=1e-3, vector=n1)
n1=c(238,648,103,7, 3)
convt(matACc, accuracy=1e-3, vector=n1) # Convergence time to Stable Stage Distribution
dr(matACc)
dr(matACc, return.time=TRUE, x=10) # damping ratio
matUCc=matrix(c(
0,	    0,   	     0,	    0,     0,
0.675,	0.703,     0,	    0,     0,
0,	    0.047,	   0.657,  0,    0,
0	,     0,	       0.019,	0.682, 0,
0,      0,         0,     0.061, 0.8091
), byrow=5, ncol=5)
matFCc=matrix(c(
0,	0,	0,	4.665, 61.896,
0,	0,	0,	0, 0,
0,	0,	0,	0, 0,
0,	0,	0,	0, 0,
0,  0,  0,  0, 0
), byrow=5, ncol=5)
matUCc=matrix(c(
0,	    0,   	     0,	    0,     0,
0.675,	0.703,     0,	    0,     0,
0,	    0.047,	   0.657,  0,    0,
0	,     0,	       0.019,	0.682, 0,
0,      0,         0,     0.061, 0.8091
), byrow=5, ncol=5)
matFCc=matrix(c(
0,	0,	0,	4.665, 61.896,
0,	0,	0,	0, 0,
0,	0,	0,	0, 0,
0,	0,	0,	0, 0,
0,  0,  0,  0, 0
), byrow=5, ncol=5)
matUCc
matACc
matUCc=matrix(c(
0,	    0,   	     0,	    0,     0,
0.675,	0.703,     0,	    0,     0,
0,	    0.047,	   0.657,  0,    0,
0	,     0,	       0.019,	0.682, 0,
0,      0,         0,     0.061, 0.8091
), byrow=5, ncol=5)
matFCc=matrix(c(
0,	0,	0,	4.665, 61.896,
0,	0,	0,	0, 0,
0,	0,	0,	0, 0,
0,	0,	0,	0, 0,
0,  0,  0,  0, 0
), byrow=5, ncol=5)
matACc=matUCc+matFCc
matACc
colnames(matACc) <- c("Huevos", "small_juv(1-7yrs)", "Large_juv(8-15)", "Subadults(16-21)", "Adults(22+)")
rownames(matACc) <- colnames(matACc)
plot_life_cycle(matACc) # life cycle with names
colnames(matACc) <- c("Huevos", "small_juv(1-7yrs)", "Large_juv(8-15)", "Subadults(16-21)", "Adults(22+)")
rownames(matACc) <- colnames(matACc)
plot_life_cycle(matACc) # life cycle with names
library(Rage)
plot_life_cycle(matACc) # life cycle with names
remotes::install_github("jonesor/Rage")
remove.packages("remotes")
remotes::install_github("jonesor/Rage")
truelambda(matACc)
lambda(matACc)
#elas(matACc)
pr1 <- project(matACc, vector=nCc, time=240)
nCc <- c(10, 10, 10, 10, 10)
pr1 <- project(matACc, vector=nCc, time=240)
#Plot the projection. This uses an S3 plotting
#method for projections. For info, see '?plot.projection'.
plot(pr1)
nCc <- c(10, 10, 10, 10, 1000)
pr1 <- project(matACc, vector=nCc, time=240)
#Plot the projection. This uses an S3 plotting
#method for projections. For info, see '?plot.projection'.
plot(pr1)
convt(matACc, accuracy=1e-3, vector=n) # Convergence time to Stable Stage Distribution
n1=c(238,648,103,7, 3)
convt(matACc, accuracy=1e-3, vector=n1) # Convergence time to Stable Stage Distribution
