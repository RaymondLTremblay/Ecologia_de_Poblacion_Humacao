0,0,0,0.007,0.017,0.036,0,.001,0.011,0.024,0.035,
0.28,0.167,0,0,0,0,0,0,0,0,0,
0,.33,.189,0,0,0,0,0,0,0,0,
0,.103,.378,.134,0,0,0,0,0,0,0,
0,0,.081,.179,.066,0,0,0,0,0,0,
0,0,0.014,0,0.082,0,0,0,0,0,0,
0,.039,0.108,.448,.754,.940,0,.300,0.570,.985,1.243,
0,0,0,0,0,0,.033,.57,0,0,0,
0,0,0,0,0,0,.148,.183,.035,0,0,
0,0,0,0,0,0,.18,.207,.193,.037,0,
0,0,0,0,0,0,.115,.126,.175,.066,0
), byrow=TRUE, ncol=11)
Tis
Tis=matrix(c(
0,0,0,0.007,0.017,0.036,0,.001,0.011,0.024,0.035,
0.28,0.167,0,0,0,0,0,0,0,0,0,
0,.33,.189,0,0,0,0,0,0,0,0,
0,.103,.378,.134,0,0,0,0,0,0,0,
0,0,.081,.179,.066,0,0,0,0,0,0,
0,0,0.014,0,0.082,0,0,0,0,0,0,
0,.039,0.108,.448,.754,.940,0,.300,0.570,.985,1.243,
0,0,0,0,0,0,.033,.57,0,0,0,
0,0,0,0,0,0,.148,.183,.035,0,0,
0,0,0,0,0,0,.18,.207,.193,.037,0,
0,0,0,0,0,0,.115,.126,.175,.066,0
), byrow=TRUE, ncol=11)
Tis
knitr::opts_chunk$set(echo = TRUE, cache = TRUE)
#############
# Generación de números aleatorios!
#####
# define an arbitrary distribution
box <- c(rep(1,10),rep(2,5),rep(3,2))                                           # define what's in the lottery ball machine (10 "1" balls, 5 "2" balls and 2 "3" balls)
barplot(table(box)/sum(table(box)),ylab="probability",xlab="possibility")       # visualize the distribution of possibilities
################
# Distribuciones discretas
################
#######
# Ejemplo: distribución binomial (distribución de lanzamiento de moneda)
# plot a discrete distribution!
xvals <- seq(0,10,1)
probs <- dbinom(xvals,10,prob=0.3)
names(probs) <- xvals
barplot(probs,ylab="Probability",xlab="Possibilities",main="Binomial distribution (discrete)")
caras=c(1:10)
caras
caras=c(1:10)
caras=tibble(caras)
caras=as.tibble(caras)
caras=as_tibble(caras)
library(tidyverse)
caras=as_tibble(caras)
caras
ggplot(caras, aes(value))+
geom_histogram(y=..density..)
ggplot(caras, aes(value))+
geom_histogram(aes(y=..density..))
caras=c(1:11)
caras=as_tibble(caras)
caras
ggplot(caras, aes(value))+
geom_histogram(aes(y=..density..))
caras=c(1:10, 10)
caras=as_tibble(caras)
caras
ggplot(caras, aes(value))+
geom_histogram(aes(y=..density..))
install.packages(c("actuar", "animation", "aplpack", "arm", "bslib", "caret", "clue", "coin", "colourpicker", "compareDF", "datawizard", "deSolve", "diffobj", "effectsize", "goftest", "Hmisc", "htmlTable", "igraph", "insight", "lubridate", "manipulateWidget", "MBESS", "MCMCpack", "mgcv", "misc3d", "mvtnorm", "optimx", "parameters", "PearsonDS", "performance", "pillar", "pkgload", "plotly", "questionr", "Rage", "raster", "rbibutils", "Rcompadre", "RcppArmadillo", "rlang", "robust", "robustHD", "rpf", "rvest", "sem", "shiny", "stringi", "systemfonts", "testthat", "textshaping", "TMB", "usethis", "vcd", "viridis", "xfun", "yulab.utils"))
knitr::opts_chunk$set(echo = TRUE)
Number_Ind= tribble(
~Species, ~Year, ~N,
"Dl", 1982, 36,
"Dl", 1983, 18,
"Dl",1984, 71,
"Dl", 1985, 23,
"Dl",1986, 29,
"Dl",1987, 21,
"Dl",1988, 5,
"Dl", 1989, 72,
"Dl", 1990, 74,
"Dl", 1991, 39,
"Dl", 1992, 72,
"Dl", 1993, 35,
"Dl",1994, 43,
"Dl", 1995, 34,
"Dl",1996, 45,
"Dl", 1997, 42,
"Dl", 1998, 78,
"Dl", 1999, 30,
"Dl", 2000, 35,
"Gc", 1982, 2,
"Gc", 1983, 5,
"Gc",1984, 19,
"Gc", 1985, 16,
"Gc",1986, 10,
"Gc",1987, 9,
"Gc",1988, 10,
"Gc", 1989, 16,
"Gc", 1990, 22,
"Gc", 1991, 25,
"Gc", 1992, 25,
"Gc", 1993, 7,
"Gc",1994, 31,
"Gc", 1995, 18,
"Gc",1996, 25,
"Gc", 1997, 71,
"Gc", 1998, 51,
"Gc", 1999, 27,
"Gc", 2000, 24,
)
Number_Ind
Number_Ind %>%
ggplot(aes(Year, N, color=Species)) +
geom_point()+
geom_line() +
scale_x_continuous(breaks = seq(1982, 2000, by = 1))+
theme(axis.text.x = element_text(angle = 75, vjust = 0.5, hjust=.5))+
ylab("Cantidad de individuos \n en flor en cada año")
Life_Table = tribble(
~Species, ~Treatment, ~Year_after_first_flowering, ~N, ~lx, ~bx,
"Dl", "Unscythes", 0, 142, 1.00, 1,
"Dl", "Unscythes", 1, 111, 0.78,1,
"Dl", "Unscythes",2,  94, 0.66,1,
"Dl", "Unscythes",3,  86, 0.61,1,
"Dl", "Unscythes",4,  77, 0.54,1,
"Dl", "Unscythes",5,  72, 0.51,1,
"Dl", "Unscythes",6,  70, 0.49,1,
"Dl", "Unscythes",7,  63, 0.44,.9,
"Dl", "Unscythes",8,  59, 0.42,.7,
"Dl", "Unscythes",9,  58,0.41,.5,
"Dl", "Unscythes",10, 49,0.35,.1,
)
gt(Life_Table)
library(tidyverse)
library(gt)
#library(kableExtra)
Life_Table = tribble(
~Species, ~Treatment, ~Year_after_first_flowering, ~N, ~lx, ~bx,
"Dl", "Unscythes", 0, 142, 1.00, 1,
"Dl", "Unscythes", 1, 111, 0.78,1,
"Dl", "Unscythes",2,  94, 0.66,1,
"Dl", "Unscythes",3,  86, 0.61,1,
"Dl", "Unscythes",4,  77, 0.54,1,
"Dl", "Unscythes",5,  72, 0.51,1,
"Dl", "Unscythes",6,  70, 0.49,1,
"Dl", "Unscythes",7,  63, 0.44,.9,
"Dl", "Unscythes",8,  59, 0.42,.7,
"Dl", "Unscythes",9,  58,0.41,.5,
"Dl", "Unscythes",10, 49,0.35,.1,
)
gt(Life_Table)
Life_Table %>%
mutate("lx"=N/142)
LT2=Life_Table %>%
mutate_at(c("N"), tibble::lst("N1"=lead), n = 1 )
LT2
LT2a=LT2 %>%
mutate_at(c("lx"), tibble::lst("lx1"=lead), n = 1 )
LT3 = LT2a %>%
mutate("gx"=lx1/lx)
LT3
# Calculating Reproductive Rate = Ro
LT4=LT3 %>%
mutate("lxbx"=bx*lx)
Ro=sum(LT4$lxbx)
Ro
#Calculating l(x)b(x)x
LT5=LT4 %>%
mutate("lxbxx"=bx*lx*Year_after_first_flowering)
LT5
sumlxbxx=LT5 %>% select(lxbxx) %>%
summarise(sum =sum(lxbxx, na.rm = TRUE))
sumlxbxx/Ro
LT4 %>%
mutate(qx = (N-N1)/N)
#library(MortalityTables)
#library(demogR)
(58-49)/58
#Calculating l(x)b(x)x
LT5=LT4 %>%
mutate("lxbxx"=bx*lx*Year_after_first_flowering)
LT5
sumlxbxx=LT5 %>% select(lxbxx) %>%
summarise(sum =sum(lxbxx, na.rm = TRUE))
LT5
#########
# Distribución normal
mean = 7.1
stdev = 10.9
curve(dnorm(x,mean,stdev),0,15,ylab="Probability (density)",xlab="Possibilities",main="Normal distribution (continuous)")   # probability density
#########
# Distribución normal
mean = 7.1
stdev = 5.9
curve(dnorm(x,mean,stdev),0,15,ylab="Probability (density)",xlab="Possibilities",main="Normal distribution (continuous)")   # probability density
#########
# Distribución normal
mean = 7.1
stdev = 5.9
curve(dnorm(x,mean,stdev),15,15,ylab="Probability (density)",xlab="Possibilities",main="Normal distribution (continuous)")   # probability density
#########
# Distribución normal
mean = 7.1
stdev = 1.9
curve(dnorm(x,mean,stdev),0,15,ylab="Probability (density)",xlab="Possibilities",main="Normal distribution (continuous)")   # probability density
x=rnorm(0,1)
x=as.tibble(x)
x
x=rnorm(0,1, 1000)
x=as.tibble(x)
x
x=rnorm(1000, 0,1 )
x=as.tibble(x)
x
ggplot(x, aes(value))+
geom_density()
x=rnorm(100000, 0,1 )
x=as.tibble(x)
ggplot(x, aes(value))+
geom_density()
x=rnorm(1000000, 0,1 )
x=as.tibble(x)
ggplot(x, aes(value))+
geom_density()
caras=c(4,7, 6, 8, 5, 4,3,7,7,2)
caras=as_tibble(caras)
caras
ggplot(caras, aes(value))+
geom_histogram(aes(y=..density..))
library(tidyverse)
caras=c(4,7, 6, 8, 5, 4,3,7,7,2,
9, 3, 5,4, 5, 4, 4,2,6,5)
caras=as_tibble(caras)
caras
ggplot(caras, aes(value))+
geom_histogram(aes(y=..density..))
knitr::opts_chunk$set(echo = TRUE)
library('popbio')
library('popdemo')
#library('modeest')
#matrices of transitions for sub-population 1
popState <- c(13, 16, 2, 19) #vector of sub-population 1 abundances for last year of observations
transMat    <- list() #matrix of transitions
transMat$T1 <- rbind(c(0.7869273, 0, 0.8300450, 0), c(0.1760353, 0.97248154, 0, 0), c(0, 0.01578038, 0.5746824, 0.07676408), c(0, 0, 0.4162108, 0.92323588))
transMat$T2 <- rbind(c(0.8285143, 0, 5.542540e-10 , 0), c(0.1396047, 0.96356898, 0, 0), c(0, 0.02150297, 0.4921383, 0.08007071), c(0, 0, 0.4983780, 0.91992925))
transMat$T3 <- rbind(c(0.8503599, 0, 5.636965e-10 , 0), c(0.1052920, 0.96467304, 0, 0), c(0, 0.01998974, 0.4835024, 0.08807574), c(0, 0, 0.5073186, 0.91192422))
transMat$T4 <- rbind(c(0.90264580, 0, 5.235940e-10, 0), c(0.06590077, 0.9630270, 0, 0), c(0, 0.0208872, 0.5139655, 0.08746788), c(0, 0, 0.4768932, 0.91253208))
transMat$T5 <- rbind(c(0.91771803, 0, 0.3499083, 0), c(0.05391462, 0.97005810, 0, 0), c(0, 0.01632058, 0.4419389, 0.07880436), c(0, 0, 0.5489797, 0.92119559))
transMat$T6 <- rbind(c(0.87316400, 0, 1.687415e-10, 0), c(0.08590074, 0.95334666, 0, 0), c(0, 0.02579743, 4.139104e-01, 0.08205262), c(0, 0, 5.766711e-01, 0.91794733))
transMat$T7 <- rbind(c(0.90703646, 0, 6.906485e-10, 0), c(0.06060516, 0.96867738, 0, 0), c(0, 0.01777129, 4.849267e-01, 0.07774181), c(0, 0, 5.058289e-01, 0.92225814))
transMat$T8 <- rbind(c(0.93404923, 0, 3.449700e-10, 0), c(0.04564076, 0.97236335, 0, 0), c(0, 0.01519189, 4.806209e-01, 0.07931822), c(0, 0, 5.101786e-01, 0.92068174))
transMat$T9 <- rbind(c(0.88524275, 0, 1.565175e-10, 0), c(0.07985631, 0.9613211, 0, 0), c(0, 0.0211242, 3.741810e-01, 0.08446428), c(0, 0, 6.166460e-01, 0.91553567))
transMat$T10 <- rbind(c(0.91569045, 0, 3.667075e-10, 0), c(0.05907888, 0.97480231, 0, 0), c(0, 0.01365979, 5.778412e-01, 0.07328772), c(0, 0, 4.130556e-01, 0.92671224))
transMat$T11 <- rbind(c(0.9170242, 0, 3.657935e-10, 0), c(0.0573607, 0.97434500, 0, 0), c(0, 0.01424255, 4.055471e-01, 0.07605183), c(0, 0, 5.854003e-01, 0.92394813))
transMat$T12 <- rbind(c(0.91868350, 0, 8.395985e-10, 0), c(0.05698844, 0.97126869, 0, 0), c(0, 0.01620411, 4.599883e-01, 0.07786934), c(0, 0, 5.308060e-01, 0.92213062))
transMat$T13 <- rbind(c(0.8933651, 0, 0.4218637, 0), c(0.0754819, 0.96883951, 0, 0), c(0, 0.01741538, 0.4741468, 0.08011046), c(0, 0, 0.5166038, 0.91988950))
transMat$T14 <- rbind(c(0.8941097, 0, 4.074855e-10, 0), c(0.0751373, 0.96842970, 0, 0), c(0, 0.01771008, 4.739166e-01, 0.07977865), c(0, 0, 5.167966e-01, 0.92022130))
transMat$T15 <- rbind(c(0.89332212, 0, 4.823470e-10, 0), c(0.07570813, 0.96829439, 0, 0), c(0, 0.01776341, 4.761405e-01, 0.08013242), c(0, 0, 5.145436e-01, 0.91986753))
transMat$T16 <- rbind(c(0.89225132, 0, 5.007945e-10, 0), c(0.07662393, 0.96863160, 0, 0), c(0, 0.01747498, 4.780552e-01, 0.08001434), c(0, 0, 5.126394e-01, 0.91998562))
transMat$T17 <- rbind(c(0.89289170, 0, 0.9053583, 0), c(0.07597438, 0.96813832, 0, 0), c(0, 0.01785388, 0.4746140, 0.08009411), c(0, 0, 0.5160928, 0.91990584))
transMat$T18 <- rbind(c(0.89225811, 0, 2.24541e-10, 0), c(0.07655306, 0.96828614, 0, 0), c(0, 0.01768011, 4.74461e-01, 0.07999146), c(0, 0, 5.16246e-01, 0.92000850))
transMat$T19 <- rbind(c(0.89225811, 0, 2.24541e-10, 0), c(0.07655306, 0.96828614, 0, 0), c(0, 0.01768011, 4.74461e-01, 0.07999146), c(0, 0, 5.16246e-01, 0.92000850))
transMat$T20 <- rbind(c(0.89279674, 0, 11.7187000, 0), c(0.07637371, 0.96860413, 0, 0), c(0, 0.01752984, 0.4744193, 0.08030667), c(0, 0, 0.5162513, 0.91969328))
transMat$T21 <- rbind(c(0.89453969, 0, 0.1771410, 0), c(0.07457337, 0.96833046, 0, 0), c(0, 0.01773764, 0.4751942, 0.07996677), c(0, 0, 0.5155116, 0.92003319))
transMat$T22 <- rbind(c(0.89360562, 0, 2.087290e-10, 0), c(0.07532944, 0.96833477, 0, 0), c(0, 0.01768248, 4.714852e-01, 0.08010061), c(0, 0, 5.192556e-01, 0.91989934))
transMat$T23 <- rbind(c(0.8920189, 0, 3.928490e-10, 0), c(0.0768873, 0.96852428, 0, 0), c(0, 0.01750726, 4.745888e-01, 0.07982504), c(0, 0, 5.161487e-01, 0.92017492))
transMat$T24 <- rbind(c(0.89387344, 0, 0.3548790, 0), c(0.07528274, 0.96816469, 0, 0), c(0, 0.01784024, 0.4740048, 0.08062855), c(0, 0, 0.5167163, 0.91937140))
#calculate the average transition matrix
meanT 	= mean(transMat)
print(meanT)
sdT 	= sqrt(var2(transMat))
print(sdT)
lambda 	= lambda(meanT)
cat('lambda', lambda, '\n')
ss 		= stable.stage(meanT)
cat('stable stage', ss, '\n')
rv 		= reproductive.value(meanT)
cat('reproductive value', rv, '\n')
elas 	= elasticity(meanT)
cat('elasticity', '\n')
print(elas)
cat('transfer function analysis',  '\n')
ele.mat <- matrix(NA, 4,4)
ele.mat[1,3] <- "F"
ele.mat[1,1] <- "P"
ele.mat[2,1] <- "P"
ele.mat[2,2] <- "P"
ele.mat[3,2] <- "P"
ele.mat[3,3] <- "P"
ele.mat[4,3] <- "P"
ele.mat[3,4] <- "P"
ele.mat[4,4] <- "P"
par(mfrow=c(4,4))
par(mar=c(4.1, 4.1, 1.1, 1.1))
zeros <- c(0, 0, 0, 0)
for(i in 1:4) {
for(j in 1:4) {
if(meanT[i,j] <= 1e-10) {
plot(0,xaxt='n',yaxt='n',bty='n',pch='',ylab='',xlab='')
next()
}
d1 	  <- e1 <- zeros
d1[i] <- 1
e1[j] <- 1
delta <- 1*seq(-meanT[i,j], meanT[i,j], 0.01)
tf1 <- tfa_lambda(meanT, d = d1, e = e1, prange = delta)
plot(tf1)#, xlab="Perturbation", ylab=expression(lambda))
s76 <- sens(meanT)[i, j]
abline(eigs(meanT, "lambda"), s76, lty = 2)
}
}
popSGR 			= stoch.growth.rate(transMat, verbose=F)
lambdaCI 		= list()
lambdaCI$approx	= exp(popSGR$approx)
lambdaCI$sim 	= exp(popSGR$sim)
lambdaCI$sim.CI	= exp(popSGR$sim.CI)
cat('lambda\n')
print(lambdaCI)
#Runs the projections. nreps is the number of replications. Takes awhile to run
popProject	= stoch.projection(matrices=transMat, n0=popState, tmax=240, nmax=1000, nreps=1e4, prob=rep(1/24, length=24), verbose=FALSE)
totPopSize 	= apply(popProject, 1, sum)
hist(totPopSize, breaks=100, col="black", border="white", xlab="Final population size at t=240 (24 years)", main='Sub-population 1')
graphics.off()
#mlvPop = mlv(totPopSize, method = "naive")
extin=c()
popQuant = matrix(NA, 3, 241)
popQuant[,1] = rep(sum(popState), 3)
popMean	= vector('numeric', 241)
popMean[1] = sum(popState)
popSD	= vector('numeric', 241)
popSD[1] = NA
for(i in 1:240){
matriz=c()
interactionX=1000
quasi=2
popExtinctProject<-stoch.projection(matrices=transMat, n0=popState, tmax=i, nmax=1000, nreps = interactionX, prob = rep(1/24, length=24), verbose=FALSE)
for(ii in 1:interactionX){
a=sum(popExtinctProject[ii,])
matriz<-rbind(matriz,c(a))
}
vv=matriz[matriz<quasi]
s=length(vv)
extin=c(extin,s)
popQuant[,i+1] <- quantile(apply(popExtinctProject, 1, sum), probs=c(0.025, 0.5, 0.975))
popMean[i+1] 	= mean(apply(popExtinctProject, 1, sum))
popSD[i+1] 		= sd(apply(popExtinctProject, 1, sum))
}
plot(popMean, xlab="Time (months)", ylab="Number of individuals (n)", type='l', main="Sub-pop 1", lwd=2, ylim=c(0,max(popQuant, na.rm=T)))
lines(popQuant[1,])
lines(popQuant[3,])
graphics.off()
plot(extin/interactionX, type='l', lwd=2, xlab="Months into future", main="Extinction probability for sub-population 1")
knitr::opts_chunk$set(echo = TRUE)
library('popbio')
library('popdemo')
#library('modeest')
#matrices of transitions for sub-population 1
popState <- c(13, 16, 2, 19) #vector of sub-population 1 abundances for last year of observations
transMat    <- list() #matrix of transitions
transMat$T1 <- rbind(c(0.7869273, 0, 0.8300450, 0), c(0.1760353, 0.97248154, 0, 0), c(0, 0.01578038, 0.5746824, 0.07676408), c(0, 0, 0.4162108, 0.92323588))
transMat$T2 <- rbind(c(0.8285143, 0, 5.542540e-10 , 0), c(0.1396047, 0.96356898, 0, 0), c(0, 0.02150297, 0.4921383, 0.08007071), c(0, 0, 0.4983780, 0.91992925))
transMat$T3 <- rbind(c(0.8503599, 0, 5.636965e-10 , 0), c(0.1052920, 0.96467304, 0, 0), c(0, 0.01998974, 0.4835024, 0.08807574), c(0, 0, 0.5073186, 0.91192422))
transMat$T4 <- rbind(c(0.90264580, 0, 5.235940e-10, 0), c(0.06590077, 0.9630270, 0, 0), c(0, 0.0208872, 0.5139655, 0.08746788), c(0, 0, 0.4768932, 0.91253208))
transMat$T5 <- rbind(c(0.91771803, 0, 0.3499083, 0), c(0.05391462, 0.97005810, 0, 0), c(0, 0.01632058, 0.4419389, 0.07880436), c(0, 0, 0.5489797, 0.92119559))
transMat$T6 <- rbind(c(0.87316400, 0, 1.687415e-10, 0), c(0.08590074, 0.95334666, 0, 0), c(0, 0.02579743, 4.139104e-01, 0.08205262), c(0, 0, 5.766711e-01, 0.91794733))
transMat$T7 <- rbind(c(0.90703646, 0, 6.906485e-10, 0), c(0.06060516, 0.96867738, 0, 0), c(0, 0.01777129, 4.849267e-01, 0.07774181), c(0, 0, 5.058289e-01, 0.92225814))
transMat$T8 <- rbind(c(0.93404923, 0, 3.449700e-10, 0), c(0.04564076, 0.97236335, 0, 0), c(0, 0.01519189, 4.806209e-01, 0.07931822), c(0, 0, 5.101786e-01, 0.92068174))
transMat$T9 <- rbind(c(0.88524275, 0, 1.565175e-10, 0), c(0.07985631, 0.9613211, 0, 0), c(0, 0.0211242, 3.741810e-01, 0.08446428), c(0, 0, 6.166460e-01, 0.91553567))
transMat$T10 <- rbind(c(0.91569045, 0, 3.667075e-10, 0), c(0.05907888, 0.97480231, 0, 0), c(0, 0.01365979, 5.778412e-01, 0.07328772), c(0, 0, 4.130556e-01, 0.92671224))
transMat$T11 <- rbind(c(0.9170242, 0, 3.657935e-10, 0), c(0.0573607, 0.97434500, 0, 0), c(0, 0.01424255, 4.055471e-01, 0.07605183), c(0, 0, 5.854003e-01, 0.92394813))
transMat$T12 <- rbind(c(0.91868350, 0, 8.395985e-10, 0), c(0.05698844, 0.97126869, 0, 0), c(0, 0.01620411, 4.599883e-01, 0.07786934), c(0, 0, 5.308060e-01, 0.92213062))
transMat$T13 <- rbind(c(0.8933651, 0, 0.4218637, 0), c(0.0754819, 0.96883951, 0, 0), c(0, 0.01741538, 0.4741468, 0.08011046), c(0, 0, 0.5166038, 0.91988950))
transMat$T14 <- rbind(c(0.8941097, 0, 4.074855e-10, 0), c(0.0751373, 0.96842970, 0, 0), c(0, 0.01771008, 4.739166e-01, 0.07977865), c(0, 0, 5.167966e-01, 0.92022130))
transMat$T15 <- rbind(c(0.89332212, 0, 4.823470e-10, 0), c(0.07570813, 0.96829439, 0, 0), c(0, 0.01776341, 4.761405e-01, 0.08013242), c(0, 0, 5.145436e-01, 0.91986753))
transMat$T16 <- rbind(c(0.89225132, 0, 5.007945e-10, 0), c(0.07662393, 0.96863160, 0, 0), c(0, 0.01747498, 4.780552e-01, 0.08001434), c(0, 0, 5.126394e-01, 0.91998562))
transMat$T17 <- rbind(c(0.89289170, 0, 0.9053583, 0), c(0.07597438, 0.96813832, 0, 0), c(0, 0.01785388, 0.4746140, 0.08009411), c(0, 0, 0.5160928, 0.91990584))
transMat$T18 <- rbind(c(0.89225811, 0, 2.24541e-10, 0), c(0.07655306, 0.96828614, 0, 0), c(0, 0.01768011, 4.74461e-01, 0.07999146), c(0, 0, 5.16246e-01, 0.92000850))
transMat$T19 <- rbind(c(0.89225811, 0, 2.24541e-10, 0), c(0.07655306, 0.96828614, 0, 0), c(0, 0.01768011, 4.74461e-01, 0.07999146), c(0, 0, 5.16246e-01, 0.92000850))
transMat$T20 <- rbind(c(0.89279674, 0, 11.7187000, 0), c(0.07637371, 0.96860413, 0, 0), c(0, 0.01752984, 0.4744193, 0.08030667), c(0, 0, 0.5162513, 0.91969328))
transMat$T21 <- rbind(c(0.89453969, 0, 0.1771410, 0), c(0.07457337, 0.96833046, 0, 0), c(0, 0.01773764, 0.4751942, 0.07996677), c(0, 0, 0.5155116, 0.92003319))
transMat$T22 <- rbind(c(0.89360562, 0, 2.087290e-10, 0), c(0.07532944, 0.96833477, 0, 0), c(0, 0.01768248, 4.714852e-01, 0.08010061), c(0, 0, 5.192556e-01, 0.91989934))
transMat$T23 <- rbind(c(0.8920189, 0, 3.928490e-10, 0), c(0.0768873, 0.96852428, 0, 0), c(0, 0.01750726, 4.745888e-01, 0.07982504), c(0, 0, 5.161487e-01, 0.92017492))
transMat$T24 <- rbind(c(0.89387344, 0, 0.3548790, 0), c(0.07528274, 0.96816469, 0, 0), c(0, 0.01784024, 0.4740048, 0.08062855), c(0, 0, 0.5167163, 0.91937140))
#calculate the average transition matrix
meanT 	= mean(transMat)
print(meanT)
sdT 	= sqrt(var2(transMat))
print(sdT)
lambda 	= lambda(meanT)
cat('lambda', lambda, '\n')
ss 		= stable.stage(meanT)
cat('stable stage', ss, '\n')
rv 		= reproductive.value(meanT)
cat('reproductive value', rv, '\n')
elas 	= elasticity(meanT)
cat('elasticity', '\n')
print(elas)
cat('transfer function analysis',  '\n')
ele.mat <- matrix(NA, 4,4)
ele.mat[1,3] <- "F"
ele.mat[1,1] <- "P"
ele.mat[2,1] <- "P"
ele.mat[2,2] <- "P"
ele.mat[3,2] <- "P"
ele.mat[3,3] <- "P"
ele.mat[4,3] <- "P"
ele.mat[3,4] <- "P"
ele.mat[4,4] <- "P"
par(mfrow=c(4,4))
par(mar=c(4.1, 4.1, 1.1, 1.1))
zeros <- c(0, 0, 0, 0)
for(i in 1:4) {
for(j in 1:4) {
if(meanT[i,j] <= 1e-10) {
plot(0,xaxt='n',yaxt='n',bty='n',pch='',ylab='',xlab='')
next()
}
d1 	  <- e1 <- zeros
d1[i] <- 1
e1[j] <- 1
delta <- 1*seq(-meanT[i,j], meanT[i,j], 0.01)
tf1 <- tfa_lambda(meanT, d = d1, e = e1, prange = delta)
plot(tf1)#, xlab="Perturbation", ylab=expression(lambda))
s76 <- sens(meanT)[i, j]
abline(eigs(meanT, "lambda"), s76, lty = 2)
}
}
popSGR 			= stoch.growth.rate(transMat, verbose=F)
lambdaCI 		= list()
lambdaCI$approx	= exp(popSGR$approx)
lambdaCI$sim 	= exp(popSGR$sim)
lambdaCI$sim.CI	= exp(popSGR$sim.CI)
cat('lambda\n')
print(lambdaCI)
#Runs the projections. nreps is the number of replications. Takes awhile to run
popProject	= stoch.projection(matrices=transMat, n0=popState, tmax=240, nmax=1000, nreps=1e4, prob=rep(1/24, length=24), verbose=FALSE)
totPopSize 	= apply(popProject, 1, sum)
hist(totPopSize, breaks=100, col="black", border="white", xlab="Final population size at t=240 (24 years)", main='Sub-population 1')
graphics.off()
#mlvPop = mlv(totPopSize, method = "naive")
extin=c()
popQuant = matrix(NA, 3, 241)
popQuant[,1] = rep(sum(popState), 3)
popMean	= vector('numeric', 241)
popMean[1] = sum(popState)
popSD	= vector('numeric', 241)
popSD[1] = NA
for(i in 1:240){
matriz=c()
interactionX=1000
quasi=2
popExtinctProject<-stoch.projection(matrices=transMat, n0=popState, tmax=i, nmax=1000, nreps = interactionX, prob = rep(1/24, length=24), verbose=FALSE)
for(ii in 1:interactionX){
a=sum(popExtinctProject[ii,])
matriz<-rbind(matriz,c(a))
}
vv=matriz[matriz<quasi]
s=length(vv)
extin=c(extin,s)
popQuant[,i+1] <- quantile(apply(popExtinctProject, 1, sum), probs=c(0.025, 0.5, 0.975))
popMean[i+1] 	= mean(apply(popExtinctProject, 1, sum))
popSD[i+1] 		= sd(apply(popExtinctProject, 1, sum))
}
plot(popMean, xlab="Time (months)", ylab="Number of individuals (n)", type='l', main="Sub-pop 1", lwd=2, ylim=c(0,max(popQuant, na.rm=T)))
lines(popQuant[1,])
lines(popQuant[3,])
graphics.off()
plot(extin/interactionX, type='l', lwd=2, xlab="Months into future", main="Extinction probability for sub-population 1")
knitr::opts_chunk$set(echo = TRUE)
r=log(2)/50
r
e=2.71828182845904523536028747135266249
No=5.4
t=(2021-1993)
N=No*(e^(r*t))
N
Diff=7.796-7.961
Diff
library(tidyverse)
df=tribble(
~day, ~N,
1, 100,
2, 158,
3, 315,
4, 298,
5, 794
)
df
library(scales)
ggplot(df, aes(day, N))+
geom_point()+
scale_y_continuous(
trans = "log2",
labels = scales::math_format(2^.x, format = log2))+
geom_smooth(method=lm)+
ylab("Natural Log of N")
#t_double=ln(2)/r
Ng=100
e=2.7182818284590
r_g= 0.12
t_double=log(2)/r_g
t_double
dN_1=r_g*Ng+Ng
dN_1
t=6
Nt=Ng*e^(r_g*t)
Nt
knitr::opts_chunk$set(echo = TRUE)
install.packages(c("backports", "cli", "generics", "systemfonts", "tzdb", "usethis", "uuid"))
knitr::opts_chunk$set(echo = TRUE, cache = TRUE)
install.packages(c('tinytex', dependencies=T))
remotes::install_github('yihui/tinytex')
